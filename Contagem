public class TreeNodCounter {

    static class Node {
        char key;
        Node left, right;

        public Node(char item) {
            key = item;
            left = right = null;
        }
    }

    static class BinaryTree {
        Node root;

        public int countNodes(Node node) {
            if (node == null) {
                return 0;
            }
            return 1 + countNodes(node.left) + countNodes(node.right);
        }

        public void inorderTraversal(Node node) {
            if (node != null) {
                inorderTraversal(node.left);
                System.out.print(node.key + " ");
                inorderTraversal(node.right);
            }
        }

        public void preorderTraversal(Node node) {
            if (node != null) {
                System.out.print(node.key + " ");
                preorderTraversal(node.left);
                preorderTraversal(node.right);
            }
        }

        public void postorderTraversal(Node node) {
            if (node != null) {
                postorderTraversal(node.left);
                postorderTraversal(node.right);
                System.out.print(node.key + " ");
            }
        }
    }

    public static void main(String[] args) {
        BinaryTree tree = new BinaryTree();

        tree.root = new Node('a');
        tree.root.left = new Node('b');
        tree.root.right = new Node('c');
        tree.root.left.left = new Node('d');
        tree.root.left.right = new Node('e');
        tree.root.right.right = new Node('f');

        System.out.print("Travessia em ordem (in-order): ");
        tree.inorderTraversal(tree.root);
        System.out.println();

        System.out.print("Travessia em pré-ordem (pre-order): ");
        tree.preorderTraversal(tree.root);
        System.out.println();

        System.out.print("Travessia em pós-ordem (post-order): ");
        tree.postorderTraversal(tree.root);
        System.out.println();

        int numberOfNodes = tree.countNodes(tree.root);
        System.out.println("O número de nós na árvore é: " + numberOfNodes);
    }
}
